<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CcsSso.Security.Api</name>
    </assembly>
    <members>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.Login(CcsSso.Security.Domain.Dtos.AuthRequest)">
             <summary>
             Authenticates a user and issues 3 tokens
             </summary>
             <response code="200">For successfull authentication id token, refresh token and access token are issued.
             </response>
             <response  code="401">Authentication fails</response>
             <response  code="400">Password reset pending. code: PASSWORD_RESET_REQUIRED</response>
             <remarks>
             Sample request:
            
                 POST /security/test/oauth/token
                 {
                    "username": "helen@xxx.com",
                    "password": "1234",
                    "client_id":"1234",
                    "client_secret":"xxxx"
                 }
            
             </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.Authorize(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Redirects the user to the configured identity and access management login URL
            </summary>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.Token(CcsSso.Security.Api.Models.TokenRequest)">
            <summary>
            Issues new security tokens when provide any type of following (auth code, refresh token)
            </summary>
            client_id     - REQUIRED. Client Identifier valid at the Sercurity Service.
            client_secret - REQUIRED for Web applications but NOT for single page applications
            grant_type    - REQUIRED (refresh_token | authorization_code)
            code          - REQUIRED when grant_type = authorization_code
            refresh_token - REQUIRED when grant_type = refresh_token
            redirect_uri  - REQUIRED (Redirection URI to which the response will be sent)
            state         - RECOMMENDED. Opaque value used to maintain state between the request and the callback
            code_verifier - Code verifier when use Authorization code flow with PKCE. 
            <response code="200">When grant type is "authorization_code" returns id token,refresh token and access token.When grant type is "refresh_token" returns id token and access token</response>
            <response  code="404">User not found</response>
            <response  code="401">User does not have permissions for the client</response>
            <response  code="400">
            error: invalid_request (The request is missing a required parameter, includes an unsupported parameter value(other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed
            error: invalid_client (Client authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method))
            error: invalid_grant (The provided authorization grant (e.g., authorization code, resource owner credentials) or refresh token is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client)
            error: unauthorized_client (The authenticated client is not authorized to use this authorization grant type)
            error: unsupported_grant_type (The authorization grant type is not supported by the authorization server)
            "INVALID_CONNECTION" User is not allowed to sign-in using the provider
            </response>
            <remarks>
            Sample requests:
            POST client_id=abdgt refreshtoken=abcs123 granttype=refresh_token client_secret=xxx redirect_uri=http://redirect_url state=123"
            </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.CheckSession(System.String)">
            <summary>
            Returns OP IFrame
            </summary>
            <response code="200">Returns OPIFrame successfully</response>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.Register(CcsSso.Security.Domain.Dtos.UserInfo)">
             <summary>
             Registers a new user in Identity Provider 
             </summary>
             <response code="201">user is created successfully</response>
             <response  code="400">
             Code: ERROR_FIRSTNAME_REQUIRED (first name is required),
             Code: ERROR_LASTNAME_REQUIRED (last name is required)
             Code: ERROR_EMAIL_REQUIRED (email is required)
             Code: ERROR_EMAIL_FORMAT (invaid email)
             Code: ERROR_PASSWORD_TOO_WEAK (Password too weak)
             </response>
             <remarks>
             Sample request:
            
                 POST /register
                 {
                    "UserName": "helen@xxx.com",
                    "Email": "helen@xxx.com",
                    "FirstName":"Helen",
                    "LastName":"Fox"
                 }
             </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.GetIdentityProvidersList">
            <summary>
            Returns all external identity providers that are listed
            </summary>
            <response code="200">List of external identity providers</response>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.UpdateUser(CcsSso.Security.Domain.Dtos.UserInfo)">
             <summary>
             Updates a user in the identity provider
             </summary>
             <response code="204">Successfully updates a user</response>
             <response  code="400">
             Code: ERROR_FIRSTNAME_REQUIRED (FirstName Required),
             Code: ERROR_LASTNAME_REQUIRED (LastName Required)
             Code: ERROR_EMAIL_REQUIRED (Email Required)
             Code: ERROR_EMAIL_FORMAT (Invaid Email)
             </response>
             <remarks>
             Sample requests:
            
                 PUT /users
                 {
                    "id":"123",
                    "userName": "helen@xxx.com",
                    "Email": "helen@xxx.com",
                    "FirstName":"Helen",
                    "LastName":"Fox",
                    "Role":"Admin",
                    "Groups":["CCS SITE 1,CCS SITE 2"],
                    "ProfilePageUrl:"<URL>Sample Profile URL</URL>"
                 }
             </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.ChangePassword(CcsSso.Security.Domain.Dtos.ChangePasswordDto)">
             <summary>
             Change the old password to the new password
             </summary>
             <response code="204">password change is successful</response>
             <response  code="400">
             Code: ACCESS_TOKEN_REQUIRED (uccess token is required),
             Code: NEW_PASSWORD_REQUIRED (new password is required)
             Code: OLD_PASSWORD_REQUIRED (old password is required)
             </response>
             <remarks>
             Sample request:
            
                 POST /users/passwords
                 {
                    "UserId":"123",
                    "AccessToken": "1234",
                    "NewPassword": "newpassword",
                    "OldPassword":"oldpassword"
                 }
             </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.InitiateResetPassword(CcsSso.Security.Domain.Dtos.ChangePasswordInitiateRequest)">
            <summary>
            Initialize a password reset request. A notification with a code will be sent to the user
            </summary>
            <response code="204">Successfully initialize reset password</response>
            <response  code="400">
            Code: USERNAME_REQUIRED (UserName is required)
            </response>
            <remarks>
            Sample request:
            POST /password-reset-requests
            {
              "helen@xxx.com"
            }
            </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.LogOut(System.String,System.String)">
            <summary>
            Clear out the user session details
            </summary>
            <response code="302">Successfully sign out the user</response>
            <response  code="400">
            Code: REDIRECT_URI_REQUIRED (Redirect URI is required)
            </response>
            <remarks>
            Sample request:
            GET /logout/http://redirecturi.com
            </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.ValidateToken(System.String)">
            <summary>
            Validates the token
            </summary>
            <response code="200">Successfully validated the token</response>
            <response  code="401">Unauthorised</response>
            <response  code="400">
            Code: TOKEN_REQUIRED (Token is required)
            Code: CLIENTID_REQUIRED (ClientId is required)
            </response>
            <remarks>
            Sample request:
            POST security/tokens/validation?client-id=xxx Authorization: Bearer vF9dft4qmT
            </remarks>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.DeleteUser(System.String)">
            <summary>
            Delete a user
            </summary>
            <response code="204">Successfully delete the user</response>
            <response code="404">User not found </response>
            <response  code="400">
            Code: INVALID_EMAIL (Invalid Email address)
            </response>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.ResetMfaByTicket(CcsSso.Security.Domain.Dtos.MfaResetInfo)">
            <summary>
            Reset Mfa by ticket
            </summary>
            <response code="204">Successfully reset the mfa</response>
            <response code="404">User not found </response>
            <response  code="400">
            Code: INVALID_TICKET (Invalid ticket)
            Code: MFA_RESET_FAILED (MFA reset failed)
            </response>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.SendMfaEamil(CcsSso.Security.Domain.Dtos.MfaResetRequest)">
            <summary>
            Send Reset Mfa email
            </summary>
            <response code="204">Successfully send the reset mfa user</response>
        </member>
        <member name="M:CcsSso.Security.Api.Controllers.SecurityController.GetUser(System.String)">
            <summary>
            Get a user
            </summary>
            <response code="200">User details</response>
            <response code="404">User not found </response>
            <response  code="400">
            Code: INVALID_EMAIL (Invalid Email address)
            </response>
        </member>
    </members>
</doc>
